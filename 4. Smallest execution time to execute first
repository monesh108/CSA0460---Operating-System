#include <stdio.h>
int main() {
    int n, i, j, minIndex;
    int burstTime[10], waitingTime[10], turnaroundTime[10], completed[10] = {0};
    int totalWaitingTime = 0, totalTurnaroundTime = 0;
    printf("Enter the number of processes (max 10): ");
    scanf("%d", &n);
    if (n <= 0 || n > 10) {
        printf("Invalid number of processes! Please enter a value between 1 and 10.\n");
        return 1;
    }
    printf("Enter burst times for each process:\n");
    for (i = 0; i < n; i++) {
        printf("Process %d: ", i + 1);
        scanf("%d", &burstTime[i]);
        if (burstTime[i] <= 0) {
            printf("Burst time must be greater than 0!\n");
            return 1;
        }
    }
    int currentTime = 0;
    for (i = 0; i < n; i++) {
        minIndex = -1;
        for (j = 0; j < n; j++) {
            if (!completed[j] && (minIndex == -1 || burstTime[j] < burstTime[minIndex])) {
                minIndex = j;
            }
        }
        waitingTime[minIndex] = currentTime;
        turnaroundTime[minIndex] = waitingTime[minIndex] + burstTime[minIndex];
        currentTime += burstTime[minIndex];
        completed[minIndex] = 1; 
    }
    for (i = 0; i < n; i++) {
        totalWaitingTime += waitingTime[i];
        totalTurnaroundTime += turnaroundTime[i];
    }
    printf("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\n", i + 1, burstTime[i], waitingTime[i], turnaroundTime[i]);
    }
    printf("\nAverage Waiting Time: %.2f\n", (float)totalWaitingTime / n);
    printf("Average Turnaround Time: %.2f\n", (float)totalTurnaroundTime / n);
    return 0;
}
