#include <stdio.h>
#define MAX 10
void firstFit(int blockSize[], int m, int processSize[], int n) 
{
    int allocation[n];
    for (int i = 0; i < n; i++) allocation[i] = -1;
    for (int i = 0; i < n; i++) 
	{
        for (int j = 0; j < m; j++) 
		{
            if (blockSize[j] >= processSize[i]) 
			{
                allocation[i] = j;
                blockSize[j] -= processSize[i];
                break;
            }
        }
    }
    printf("\nProcess No\tProcess Size\tBlock No\n");
    for (int i = 0; i < n; i++) 
	{
        if (allocation[i] != -1)
            printf("%d\t\t%d\t\t%d\n", i + 1, processSize[i], allocation[i] + 1);
        else
            printf("%d\t\t%d\t\tNot Allocated\n", i + 1, processSize[i]);
    }
}
int main() 
{
    int blockSize[MAX], processSize[MAX], m, n;
    printf("Enter number of blocks and processes: ");
    scanf("%d %d", &m, &n);
    printf("Enter block sizes:\n");
    for (int i = 0; i < m; i++) scanf("%d", &blockSize[i]);
    printf("Enter process sizes:\n");
    for (int i = 0; i < n; i++) scanf("%d", &processSize[i]);
    firstFit(blockSize, m, processSize, n);
    return 0;
}
