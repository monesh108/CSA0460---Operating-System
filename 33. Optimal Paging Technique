#include <stdio.h>
#define MAX_FRAMES 3
#define NUM_PAGES 10
void optimalPageReplacement(int pages[], int n, int frames) {
    int mem[frames], pageFaults = 0;
    for (int i = 0; i < frames; i++) mem[i] = -1;
    for (int i = 0; i < n; i++) {
        int found = 0, farthest = -1, replace = -1;
        for (int j = 0; j < frames; j++) {
            if (mem[j] == pages[i]) found = 1;
        }
        if (!found) {
            for (int j = 0; j < frames; j++) {
                if (mem[j] == -1) {
                    replace = j;
                    break;
                }
                int next = n;
                for (int k = i + 1; k < n; k++) {
                    if (pages[k] == mem[j]) {
                        next = k;
                        break;
                    }
                }
                if (next > farthest) {
                    farthest = next;
                    replace = j;
                }
            }
            mem[replace] = pages[i];
            pageFaults++;
            printf("Page %d fault. Frames: ", pages[i]);
            for (int j = 0; j < frames; j++) printf("%d ", mem[j]);
            printf("\n");
        }
    }
    printf("Total Page Faults: %d\n", pageFaults);
}
int main() {
    int pages[NUM_PAGES] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3};
    optimalPageReplacement(pages, NUM_PAGES, MAX_FRAMES);
    return 0;
}
